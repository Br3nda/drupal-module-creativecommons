<?php
// $Id: creativecommons.module,v 1.7 2009/06/08 16:36:13 balleyne Exp $ drupal 4.7 compatible


##################################################
##################################################

/**
 * @file
 * Creative Commons Drupal module
 *   Allows content within a site or attached to a node to
 *   be assigned a Creative Commons license.
 *   http://creativecommons.org/license/
 *
 *
 * By: Peter Bull <pbull@ltc.org>
 * 2005-02-28 / digitalbicycle.org / ltc.org
 * This software is released under the terms of the LGPL license, relicensed
 * under GPLv2 for drupal.org.
 *
 * Utilizes code and inspiration from http://cclicense.sourceforge.net/
 *   Originally released by Blake Watters <sbw@ibiblio.org>
 *   under the terms of the LGPL license (now, GPLv2 for drupal.org).
 *
 */

##################################################
##################################################


require_once('creativecommons.class.php');


/**
 * Enclose each arg in paragraph tags.
 */
function cc_para() {
  $args = func_get_args();
  $p = '';
  foreach ($args as $c)
    $p .= "<p>$c</p>";
  return $p;
}


/**
 * Implementation of hook_perm().
 */
function creativecommons_perm() {
  return array('administer creative commons');
}


/**
 * Implementation of hook_menu().
 */
function creativecommons_menu() {
  $items = array();

  $items['admin/settings/creativecommons'] = array(
    'title' => 'Creative Commons',
    'description' => 'Configure the Creative Commons settings.',
    'page callback' => 'drupal_get_form',//'creativecommons_configure',
    'page arguments' =>  array('creativecommons_configure_general'),
    'access arguments' => array('administer creative commons')
  );

  $items['admin/settings/creativecommons/edit'] = array(
    'title' => 'settings',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -10
  );

  $items['admin/settings/creativecommons/site'] = array(
    'title' => 'site license',
    'page callback' => 'drupal_get_form',//'creativecommons_configure',
    'page arguments' => array('creativecommons_configure_site'),
    'access arguments' => array('administer creative commons'),
    'type' => MENU_LOCAL_TASK
  );
  return $items;
}


/**
 * Implementation of hook_help().
 */
function creativecommons_help($path, $arg) {
  $cc_desc = 'A Creative Commons license helps you publish your work online while letting others know exactly what they can and can\'t do with your work. Creative Commons offers a flexible range of protections and freedoms for authors and artists, built upon the "all rights reserved" concept of traditional copyright to create a voluntary "some rights reserved" copyright.';
  $cc_desc_short = 'Assign a Creative Commons license to content that appears on the site.';
  $cc_node = 'Attaching a Creative Commons license to a node within Drupal can designate the content of that node, as well as any attached files, as available under that license.';
  $cc_url = 'For more information, visit <a href="http://creativecommons.org/learnmore">http://creativecommons.org/learnmore</a>.';

  switch ($path) {
    case 'admin/modules#description':
      return t($cc_desc_short);
    case 'admin/settings/creativecommons':
      return t(cc_para($cc_desc, $cc_node, $cc_url));
    case 'admin/help#creativecommons':
      return t(cc_para($cc_desc, $cc_node, $cc_url));
  }
}


/**
 * Admin settings page
 * TODO: deprecated -- anything needed from here?
 */
function creativecommons_configure() {
/*
  // site license settings
  if (arg(3) == 'site') {
	  $output1 = creativecommons_configure_site();
  	  $output2 = creativecommons_configure_site_license_display();
  	  $output = array_merge($output1,$output2);
  }
  else {*/
    if ($_POST)
      system_settings_form_submit('creativecommons_configure', $_POST['edit']);
/*
	$output = creativecommons_configure_general();
  }

  // the first argument is causing an error
  //return system_settings_form('creativecommons_configure', $output);
  return drupal_get_form($output);*/
}


/**
 * General Creative Commons settings form
 */
function creativecommons_configure_general() {

  $form['creativecommons_general'] = array(
    '#type' => 'fieldset',
    '#title' => t('General settings'),
  );

  $form['creativecommons_general']['creativecommons_image_path'] = array(
    '#type' => 'textfield',
    '#title' => t('Creative Commons image path'),
    '#default_value' => variable_get('creativecommons_image_path', 'modules/creativecommons/images'),
    '#size' => 50,
    '#maxlength' => 255,
    '#description' => t('A file system path where the Creative Commons images will reside. This directory must exist and be publicly accessible. Copy the images included with the Creative Commons module to this directory.'),
    '#attributes' => NULL,
    '#required' => TRUE,
  );
  $form['creativecommons_general']['creativecommons_js_path'] = array(
    '#type' => 'textfield',
    '#title' => t('Creative Commons javascript path'),
    '#default_value' => variable_get('creativecommons_js_path', 'modules/creativecommons/js'),
    '#size' => 50,
    '#maxlength' => 255,
    '#description' => t('A file system path where the Creative Commons javascript code will reside. This directory must exist and be publicly accessible. Copy the javascript (.js) file included with the Creative Commons module to this directory.'),
    '#attributes' => NULL,
    '#required' => TRUE,
  );

//--------------- TODO: error caused here -- need to be more descriptive
if (!$selected_licenses = variable_get('creativecommons_available_licenses', NULL))
    form_set_error('creativecommons_available_licenses',
      t('You currently have no license options selected. You must enable at least one license or the module will not function properly'));

  $license_array_keys = creativecommons_get_license_array();
  $metadata_types_keys = creativecommons_get_metadata_types();

  $form['creativecommons_license'] = array(
    '#type' => 'fieldset',
    '#title' => t('License selection'),
  );
  $form['creativecommons_license']['creativecommons_available_licenses'] = array(
    '#type' => 'checkboxes',
    '#title' => t('Available licenses'),
    '#default_value' => $selected_licenses,
    '#options' => $license_array_keys,
    '#description' => t('Select the licenses you would like to make available to your users.'),
  );
  $form['creativecommons_license']['creativecommons_required'] = array(
    '#type' => 'checkboxes',
    '#title' => t('Required metadata fields'),
    '#default_value' => variable_get('creativecommons_required', array()),
    '#options' => $metadata_types_keys,
    '#description' => t('This option allows you to require specific metadata to be included when a license is applied.'),
  );

  //-------------------

  $form['creativecommons_display'] = array(
    '#type' => 'fieldset',
    '#title' => t('Node display'),
  );

  $form['creativecommons_display']['creativecommons_display'] = array(
    '#type' => 'radios',
    '#title' => t('Display license information'),
    '#default_value' => variable_get('creativecommons_display', 1),
    '#options' => array(
      t('Display text'),
      t('Display text and Creative Commons logo'),
      t('Display text and icons'),
      t('Do not display license')
    ),
    '#description' => t('You can display license details when viewing a node.'),
    '#required' => TRUE,
    '#attributes' => FALSE,
  );

  $form['creativecommons_display']['creativecommons_rdf'] = array(
    '#type' => 'checkbox',
    '#title' => t('Insert RDF into HTML'),
    '#return_value' => 1,
    '#default_value' => variable_get('creativecommons_rdf', TRUE),
    '#description' => t('Attach license information within the HTML to let your visitors know what license applies to your works.'),
  );

  return system_settings_form($form);

}

/**
 * Return array of licenses parsed from licenses.xml
 */
function creativecommons_get_license_array() {
  $license_xml = creativecommons_get_license_xml();
  $parser = xml_parser_create();
  xml_parser_set_option($parser, XML_OPTION_SKIP_WHITE, 1);
  xml_parser_set_option($parser, XML_OPTION_CASE_FOLDING, 0);
  xml_parse_into_struct($parser, $license_xml, $values, $index);
  xml_parser_free($parser);
  $types = array();
  $types['none'] = 'No license';
  foreach ($values as $key) {
    if ($key['tag'] == 'license' && $key['level'] == 2)
      $types[$key['attributes']['id']] = $key['value'];
  }
  return $types;
}

/**
 * Return xml defining available creative commons licenses
 */
function creativecommons_get_license_xml() {
  return creativecommons_return_xml('classes', 'http://api.creativecommons.org/rest/');
}

/**
 * Refreshes cached XML if file is greater than $hrs hours old
 * $filename	name up file to be retrieved/updated
 * $uri		uri of file content on CC api site
 * $hrs		file should be updated if older then X number of hours
 * $update	force update of the file
 */
function creativecommons_return_xml($filename, $uri, $hrs = 24, $update = FALSE) {
  // check for xml variable
  $xml = variable_get('creativecommons_'. $filename, NULL);
  if ($xml) {

    // get timestamp ***directly from variables table*** to avoid caching
    $result = db_query("SELECT value FROM {variable} WHERE name = '%s'", 'creativecommons_'. $filename .'_timestamp');
    if ($row = db_fetch_object($result)) {
      if ($ts = unserialize($row->value)) {
        $diff = (time() - $ts)/60/60;
        if ($diff >= $hrs)
          $update = TRUE;
      }
      else $update = TRUE;
    }
    else $update = TRUE;
  }
  else $update = TRUE;

  // request xml
  if ($update) {
    $headers = array();
    $result = drupal_http_request($uri, $headers);
    switch ($result->code) {
      case 200:
        variable_set('creativecommons_'. $filename, $result->data);
        variable_set('creativecommons_'. $filename .'_timestamp', time());
        return $result->data;
        break;
      default:
        return;
        break;
    }
  }
  else return $xml;
}

/**
 * Return associative array of metadata names/descriptions
 */
function creativecommons_get_metadata_types() {
  return array(
    'format' => t('Format of work'),
    'title' => t('Title of work'),
    'description' => t('Description'),
    'creator' => t('Creator\'s name'),
    'rights' => t('<a href="http://creativecommons.org/jargon/copyright" onclick="cc_popup(\'http://creativecommons.org/jargon/copyright\');return FALSE;">Copyright</a> holder\'s name'),
    'date' => t('<a href="http://creativecommons.org/jargon/copyright_date" onclick="cc_popup(\'http://creativecommons.org/jargon/copyright_date\');return FALSE;">Year of copyright</a>'),
    'source' => t('<a href="http://creativecommons.org/jargon/source_work" onclick="cc_popup(\'http://creativecommons.org/jargon/source_work\');return FALSE;">Source work</a> URL')
  );
}

/**
 * Creative Commons site license display settings form
 */
function creativecommons_configure_site_license_display() {
  $prefix = 'creativecommons_site';

      // save fields
  if ($_POST) {
    variable_set($prefix .'_license_display', $_POST['edit'][$prefix .'_license_display']);
    variable_set($prefix .'_license_embed', $_POST['edit'][$prefix .'_license_embed']);
    variable_set($prefix .'_footer_text', $_POST['edit'][$prefix .'_footer_text']);
  }

  // site license display
  $form['site_license_display'] = array(
    '#type' => 'fieldset',
    '#title' => t('Site license display'),
  );
  $form['site_license_display'][$prefix .'_license_display'] = array(
    '#type' => 'checkbox',
    '#title' => t('Display site license on each page'),
    '#return_value' => 1,
    '#default_value' => variable_get($prefix .'_license_display', FALSE),
  );
  $form['site_license_display'][$prefix .'_license_embed'] = array(
    '#type' => 'checkbox',
    '#title' => t('Embed license metadata in the HTML of the site'),
    '#return_value' => 1,
    '#default_value' => variable_get($prefix .'_license_embed', FALSE),
  );
  $form['site_license_display'][$prefix .'_footer_text'] = array(
    '#type' => 'textarea',
    '#title' => t('Footer text'),
    '#default_value' => variable_get($prefix .'_footer_text', NULL),
    '#cols' => 60,
    '#rows' => 3,
    '#description' => t('This text will accompany the display of the site license.'),
    '#attributes' => NULL,
    '#required' => NULL,
  );

  return system_settings_form($form);
}


/**
 * Creative Commons site license settings form
 */
function creativecommons_configure_site() {
  global $base_url;
  $prefix = 'creativecommons_site';

  if ( $_POST   ) {

  // make it work
  foreach ($_POST['edit']['select_license_form'] as $key => $val) {
    $_POST['edit'][$key] = $val;
  }
  unset($_POST['edit']['select_license_form']);

  // save license data
  $p = $_POST['edit'][$prefix .'_license'];
  $questions = creativecommons_get_questions_array($p);
  foreach ($questions as $k => $v) {
    $post_val = $_POST['edit'][$prefix][$k];
    if (in_array($post_val, $v['answers'])) {
      $questions[$k]['selected'] = $post_val;
    }
    else {
      // default to first answer in array
      $questions[$k]['selected'] = current($v['answers']);
    }
  }
  if (!$_POST['edit'][$prefix]['metadata']['source'])
    $_POST['edit'][$prefix]['metadata']['source'] = $base_url;
  $cc = new creativecommons_license($p, $questions, $_POST['edit'][$prefix]['metadata']);

  // save serialized data
  variable_set('creativecommons_site_license', serialize($cc));
  } // end posted


  else { // // load site license
    $cc_data = variable_get('creativecommons_site_license', NULL);
    if ($cc_data)
      $cc = unserialize($cc_data);
  }

  $node->cc = $cc;
  $selected = variable_get($prefix .'_license', NULL);
  $display = creativecommons_select_license_form($node, $prefix);

  // append metadata fields and defaults site values
  global $base_url;
  $defaults = array('format' => 'interactive', 'source' => $base_url);
  foreach (array('description' => 'site_slogan', 'description' => 'site_mission',
    'title' => 'site_name') as $mn => $vv) {
    $gv = variable_get($vv, NULL);
    if (!is_null($gv) && drupal_strlen($gv) > 0)
      $defaults[$mn] = $gv;
  }

  if (!is_null($node->cc->license_type) && $node->cc->license_type != 'none') {
    $display2 = creativecommons_build_metadata_fields($node, $prefix, $defaults);
    $display['select_license_form']['creativecommons_site']['metadata'] = $display2['creativecommons_site']['metadata'];
  }

  //TODO: this is awkward
  $output2 = creativecommons_configure_site_license_display();
  $display = array_merge($display, $output2);

  return $display;
}

/**
 * Display license selection form
 */
function creativecommons_select_license_form($node, $prefix) {

  // js to update form?  or rewrite layers with form fields per each license
  $extra['onchange'] = "this.form.submit();";

  // available license types
  $types = creativecommons_get_license_array();

  if ($avail = variable_get('creativecommons_available_licenses', NULL)) {
    foreach ($types as $k => $v) {
      if ($avail[$k] === $k ) {
        // take it
      }
      else {
        // unset it
        unset($types[$k]);
      }
    }
  }

  // default to first license in array
  if (!$node->cc->license_type)
    $node->cc->license_type = key($types);

  $form['select_license_form'] = array(
    '#type' => 'fieldset',
    '#title' => t('Site license display'),
    '#tree' => TRUE,
  );

  $form['select_license_form'][$prefix .'_license'] = array(
    '#type' => 'select',
    '#title' => t('Select a license'),
    '#default_value' => $node->cc->license_type,
    '#options' => $types,
    '#attributes' => $extra,
    '#description' => NULL,
  );


  $question_array = creativecommons_get_questions_array($node->cc->license_type);
  foreach ($question_array as $k => $v) {
    if ($node->cc->$k !== NULL) {
      $question_array[$k]['selected'] = $node->cc->$k;
    }
    else {
      // default to first answer in array
      $question_array[$k]['selected'] = current($v['answers']);
    }
  }

  foreach ($question_array as $q => $a) {
    $options = array();
    foreach ($a['answers'] as $k => $v)
      $options[$v] = $k;
    if (count($a['answers']) <= 3) {
      $form['select_license_form'][$prefix .''][''. $q] = array(
        '#type' => 'radios',
        '#title' => str_replace(':', '', $a['question']),
        '#default_value' => $node->cc->$q,
        '#options' => $options,
        '#description' => $a['description'],
        '#required' => TRUE,
        '#attributes' => NULL,
        '#tree' => TRUE,
      );
    }
    else {
      $form['select_license_form'][$prefix .''][''. $q] = array(
        '#type' => 'select',
        '#title' => str_replace(':', '', $a['question']),
        '#default_value' => $node->cc->$q,
        '#options' => $options,
        '#description' => $a['description'],
        '#extra' => 0,
        '#multiple' => NULL,
        '#required' => TRUE,
         '#tree' => TRUE,
      );
    }
  }

return system_settings_form($form);
}

/**
 * Return array of questions for specified license
 */
function creativecommons_get_questions_array($license_id) {
  $question_xml = creativecommons_get_questions_xml($license_id);
  $parser = xml_parser_create();
  xml_parser_set_option($parser, XML_OPTION_SKIP_WHITE, 1);
  xml_parser_set_option($parser, XML_OPTION_CASE_FOLDING, 0);
  xml_parse_into_struct($parser, $question_xml, $values, $index);
  xml_parser_free($parser);

  $questions = array();
  foreach ($values as $xn) {

    // new question array item
    if ($xn['tag'] == 'field' && $xn['type'] == 'open') {
      $current = $xn['attributes']['id'];
      $questions[$current] = array();
    }

    // set description
    if ($xn['tag'] == 'description')
      $questions[$current]['description'] = $xn['value'];

    // set question
    if ($xn['tag'] == 'label' && is_null($questions[$current]['answers'])
      && $current !== NULL && is_null($ans_lbl)) {
      $questions[$current]['question'] = $xn['value'];
    }

    // set answer labels/values
    if ($ans_lbl !== NULL && $ans_val !== NULL) {
      $questions[$current]['answers'][$ans_val] = $ans_lbl;
      $ans_lbl = NULL;
      $ans_val = NULL;
    }
    if ($xn['tag'] == 'enum' && $xn['type'] == 'open')
      $ans_lbl = $xn['attributes']['id'];
    if ($xn['tag'] == 'label' && $ans_lbl !== NULL)
      $ans_val = $xn['value'];
  }
  return $questions;
}

/**
 * Return xml defining questions/answers for a specific creative commons license
 */
function creativecommons_get_questions_xml($license_id) {
  if ($license_id != 'none' && !is_null($license_id)) {
    $filename = $license_id .'.xml';
    $uri = 'http://api.creativecommons.org/rest/license/'. $license_id .'/';
    return creativecommons_return_xml($filename, $uri);
  }
  return;
}

/**
 * Loop thru metadata and build form fields
 */
function creativecommons_build_metadata_fields($node, $prefix, $defaults = NULL) {
  // loop thru metadata fields
  $fields = '';
  $metadata_types = creativecommons_get_metadata_types();
  foreach ($metadata_types as $m => $d) {
    $sel = ($node->cc->metadata[$m]) ? $node->cc->metadata[$m] : '';
    if (is_array($defaults) && array_key_exists($m, $defaults)) {
      if (is_null($sel))
        $sel = $defaults[$m];
    }

    // build metadata form fields
    switch (drupal_strtolower($m)) {
      case 'format':
        $formats = creativecommons_get_formats();
        $form[$prefix]['metadata'][$m] = array(
          '#type' => 'select',
          '#title' => t($d),
          '#default_value' => $sel,
          '#options' => $formats,
          '#description' => NULL,
          '#attributes' => NULL,
          '#required' => $req,
        );
        break;

      case 'description':
        $form[$prefix]['metadata'][$m] = array(
          '#type' => 'textarea',
          '#title' => t($d),
          '#default_value' => $sel,
          '#cols' => 60,
          '#rows' => 5,
          '#description' => NULL,
          '#attributes' => NULL,
          '#required' => $req,
        );
        break;

      default:
        $form[$prefix]['metadata'][$m] = array(
          '#type' => 'textfield',
          '#title' => t($d),
          '#default_value' => $sel,
          '#size' => 50,
          '#maxlength' => 255,
          '#description' => NULL,
          '#attributes' => NULL,
          '#required' => $req,
        );
        break;
    }
  }
return system_settings_form($form);
}

/**
 * Implementation of hook_footer() -- display site license on footer of each page
 */
function creativecommons_footer() {
  if ($cc_data = variable_get('creativecommons_site_license', NULL)) {
    $cc = unserialize(stripslashes($cc_data));
    if (variable_get('creativecommons_site_license_display', FALSE))
        $output .= $cc->get_html(TRUE);
    if (variable_get('creativecommons_site_license_embed', FALSE))
      $output .= '<!-- '. $cc->get_rdf() .' -->';
    return $output;
  }
  return;
}


/**
 * Return array of formats.
 * Uses associative array to preserve content name in form values.
 */
function creativecommons_get_formats() {
  $f = array(
    'other' => 'Other',
    'audio' => 'Audio',
    'video' => 'Video',
    'image' => 'Image',
    'text' => 'Text',
    'interactive' => 'Interactive');
  return $f;
}


/**
 * Implementation of hook_nodeapi().
 */
function creativecommons_nodeapi(&$node, $op, $arg, $a4) {
  // echo_pre($node); echo $op;  // validate posted data coming very nicely
  // echo_pre($_POST);

  switch ($op) {
    // settings   'form post replaced by form_api
      case 'validate':
      if (variable_get("creativecommons_$node->type", 1))
        if ($_POST['edit'])
          creativecommons_validate($node);
      break;

    case 'load':
      if (variable_get("creativecommons_$node->type", 1))
        $node->cc = creativecommons_load($node);
      break;

    case 'view':
      creativecommons_view($node, FALSE, FALSE, TRUE);
      break;

    case 'insert':
    case 'update':
          creativecommons_delete($node);
          creativecommons_save($node);
      break;

    case 'delete':
      creativecommons_delete($node);
      break;


    case 'rss item':
      if ($item_license = creativecommons_xml($node))
        return $item_license;
      break;

  }
  return $output;
}

/**
 * Implementation of hook_form_alter().
 */
function creativecommons_form_alter(&$form, $form_state, $form_id) {

  if (isset($form['type']) && $form['type']['#value'] .'_node_settings' == $form_id) {

    $node->type = $form['type']['#value'];
    $form['workflow']['creativecommons_'. $node->type] = array(
      '#type' => 'checkbox',
      '#title' => t("Apply the Creative Commons module to content type '". $node->type ."'"),
      '#return_value' => 1,
      '#default_value' => variable_get("creativecommons_". $node->type, 1),
    );
  }

  if (isset($form['type']) && $form['type']['#value'] .'_node_form' == $form_id) {
    $node = $form['#node'];    // got form

    if (variable_get("creativecommons_$node->type", 1)) {
        $form = array_merge($form, creativecommons_form($node));
    }
  }

  return $form;
}

/**
 * Append Creative Commons license to an RSS <item> node
 */
function creativecommons_xml($node) {
  if ($node->cc) {
    return array(
      array('key' => 'xmlns:creativeCommons', 'value' => $node->cc->license_uri)
    );
  }
  return;
}
/**
 * Append html and rdf content to node.
 */
function creativecommons_view(&$node, $teaser = FALSE, $page = FALSE) {
  if ($node->cc) {
    // append html
    $output = $node->cc->get_html();

    // append rdf
    if (variable_get('creativecommons_rdf', TRUE))
      $output .= "<!-- ". $node->cc->get_rdf() ." -->";

    if ($output) {
      $node->body .= '<p class="creativecommons">'. $output .'</p>';
      if ($teaser)
        $node->teaser .= '<p class="creativecommons">'. $output .'</p>';
    }
  }
}


/**
 * Form for attaching Creative Commons license to a node
 */
function creativecommons_form($node) {

    if ($_POST) {

    if (is_array($_POST['edit']['creativecommons']['select_license_form']) ) {
      foreach ($_POST['edit']['creativecommons']['select_license_form'] as $key => $val ) {
        $_POST['edit'][$key] = $val;
      }
    }

    if (is_array($_POST['edit']['creativecommons']['cc']) ) {
      foreach ($_POST['edit']['creativecommons']['cc'] as $key => $val ) {
        $_POST['edit']['cc'][$key] = $val;
      }
    }

    $p = $_POST['edit']['cc_license'];
    $questions = creativecommons_get_questions_array($p);
    foreach ($questions as $k => $v) {
      $post_val = $_POST['edit']['cc'][$k];
      if (in_array($post_val, $v['answers'])) {
        $questions[$k]['selected'] = $post_val;
      }
      else {
        // default to first answer in array
        $questions[$k]['selected'] = current($v['answers']);
      }
    }

    if (!$_POST['edit']['cc']['metadata']['source'])
      $_POST['edit']['cc']['metadata']['source'] = $base_url;
    $cc = new creativecommons_license($p, $questions, $_POST['edit']['cc']['metadata']);
    $node->cc = $cc;
  }

  // if no licenses available (in admin > settings > creative commons) then no form displayed
  if (!$selected_licenses = variable_get('creativecommons_available_licenses', NULL))
    return;

  $cc_img_path = variable_get('creativecommons_image_path', 'modules/creativecommons/images');
  $cc_js_path = variable_get('creativecommons_js_path', 'modules/creativecommons/js');

  $cc_img = '<img src="'. $cc_img_path .'/cc-choose-license.gif" alt="Creative Commons licenses" />';
  $cc_txt = '<p><a href="http://creativecommons.org/learn/licenses/" target="_blank">Creative Commons licenses</a> help you share your work while keeping your copyright. Other people can copy and distribute your work provided they give you credit -- and only on the conditions you specify here. This form helps you choose those conditions. If you want to offer your work with no conditions, choose the <a href="http://creativecommons.org/licenses/publicdomain/" target="_blank">public domain</a>.</p>';

  // add javascript to <head>
  $header = "\n  <script type=\"text/javascript\" src=\"". $cc_js_path ."/cc_toggle.js\"></script>";
  drupal_set_html_head($header);

  // built html output
  $output = t($cc_txt);

  //$selected = $node->cc_license;
  $selected = (is_null($node->cc_license)) ? $node->cc->license_type  : $node->cc_license;
  $prefix = 'cc';
  $output1 = creativecommons_select_license_form($node, $prefix);

  // if no license, then don't process the metadata
  //  note: this loses the metadata, need to preserve it somehow... maybe load the hidden layer,
  //  without the link to display:block, and no error handling.

  if (is_null($selected) || $selected == 'none') {
    $form['creativecommons'] = array(
      '#type' => 'fieldset',
      '#title' => $cc_img,
      '#prefix' => '<div class="attachments">',
      '#suffix' => '</div>',
      '#collapsible' => TRUE,
      '#collapsed' => FALSE,
      '#tree' => TRUE,
  );
  $form['creativecommons'][] = array('#value' => $output);
  $form['creativecommons']['select_license_form'] = $output1['select_license_form'];

  return $form;
}


/// ///////////////////////////////////
//if (!is_null($node->cc_license->license_type) && $node->cc_license->license_type != 'none')
//  $output .= cc_para("not an empty license");
/// //////////////////////////////////////


// required metadata
  $required = variable_get('creativecommons_required', array());
  if (!is_array($required))
    $required = array();

  // loop thru metadata fields
  $fields = '';
  $metadata_types = creativecommons_get_metadata_types();

  $form['creativecommons'] = array(
    '#type' => 'fieldset',
    '#title' => $cc_img,
    '#prefix' => '<div class="attachments">',
    '#suffix' => '</div>',
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
    '#tree' => TRUE,
  );
  $form['creativecommons'][] = array('#value' => $output);
  $form['creativecommons']['select_license_form'] = $output1['select_license_form'];

  global $user;
  $link_txt = 'Click to include more information about your work.';
  $show_style = ($node->cc->show_meta) ? 'block' : 'none';
  $form['creativecommons'][] = array('#value' => '<p><a onclick="cc_toggle(\'\',\'cc_optional\');return FALSE;" href="javascript:cc_toggle(\'\',\'cc_optional\');return FALSE;"><span id="moreinfo">'. $link_txt .'</span></a></p>');
  $form['creativecommons'][] = array('#value' => '<div id="cc_optional" style="display:'. $show_style .';">');

  $form['creativecommons'][] = array('#value' => cc_para("button to save default user values"));


  foreach ($metadata_types as $m => $d) {
    $sel = ($node->cc->metadata[$m]) ? $node->cc->metadata[$m] : '';

    // validate data
    if ($required) {
      $req = (in_array($m, $required)) ? TRUE : FALSE;
      if ($req && !$sel && !$node->cc->new) {
        form_set_error("creativecommons][cc][metadata][$m", t("Creative Commons: Please submit the $m for your content."));
        // show metadata block if errors exist
        $node->cc->show_meta = TRUE;
      }
      // show metadata block on creation of post
      else if ($node->cc->new)
        $node->cc->show_meta = TRUE;
    }

    // build metadata form fields
    switch (drupal_strtolower($m)) {
      case 'format':
        $formats = creativecommons_get_formats();
        // $fields .= form_select(t($d), "cc][metadata][$m", $sel, $formats, NULL, NULL, NULL, $req);
        $form["creativecommons"]["cc"]["metadata"]["$m"] = array(
          '#type' => 'select',
          '#title' => t($d),
          '#default_value' => $sel,
          '#options' => $formats,
          '#description' => NULL,
          '#extra' => NULL,
          '#multiple' => NULL,
          '#required' => $req,
        );
        break;

      case 'description':
        // $fields .= form_textarea(t($d), "cc][metadata][$m", $sel, 60, 5, NULL, NULL, $req);
        $form["creativecommons"]["cc"]["metadata"]["$m"] = array(
          '#type' => 'textarea',
          '#title' => t($d),
          '#default_value' => $sel,
          '#cols' => 60,
          '#rows' => 5,
          '#description' => NULL,
          '#attributes' => NULL,
          '#required' => $req,
        );
        break;

      default:
        // $fields .= form_textfield(t($d), "cc][metadata][$m", $sel, 50, 255, NULL, NULL, $req);
        $form["creativecommons"]["cc"]["metadata"]["$m"] = array(
          '#type' => 'textfield',
          '#title' => t($d),
          '#default_value' => $sel,
          '#size' => 50,
          '#maxlength' => 255,
          '#description' => NULL,
          '#attributes' => NULL,
          '#required' => $req,
        );
        break;
    }
  }

    $form['creativecommons'][] = array('#value' => '</div>');

  return $form;
}

/**
 * Save license/node relationship in database
 */
function creativecommons_save($node) {

  if ($node->cc && !method_exists($node->cc, 'save') ) {
    echo 'bad behaviour';
  }

  if ($node->cc) {
    $node->cc->nid = $node->nid;
    $node->cc->save();
  }

  return;
}


// hook insert
/* function creativecommons_insert($node) {
  creativecommons_save($node);
} */

/**
  * hook update

function creativecommons_update($node) {
    creativecommons_delete($node);
    creativecommons_save($node);
}
  */

/**
  * Delete node/license relationship from database
  */
function creativecommons_delete($node) {
  if ($node->nid) {
    db_query("DELETE FROM {creativecommons} WHERE nid = %d", $node->nid);
  }
  return;
}


/**
  * Load the license for a specified node
  */
function creativecommons_load($node) {

  if ($node->nid && !isset($node->cc)) {
    $result = db_query("SELECT cc.data FROM {creativecommons} cc WHERE cc.nid = %d", $node->nid);
    if ($row = db_fetch_object($result)) {
      $data = stripslashes($row->data);
      $cc = unserialize($data);
      return $cc;
    }
  }
  return;
}


/**
  * validate hook
  */
function creativecommons_validate(&$node) {

  // check for warning is array first arg
  foreach ($node->creativecommons['select_license_form'] as $key => $val ) {
      $node->$key = $val;
  }
  foreach ($node->creativecommons['cc'] as $key => $val ) {
      $node->cc[$key] = $val;
  }
  // echo_pre($node);
  if (is_null($node->cc_license))
    $node->cc_license = (is_null($node->cc->license_type)) ? 'none' : $node->cc->license_type;

  $questions = creativecommons_get_questions_array($node->cc_license);
  // loop thru ?s, set to current val, else default to first answer in array
  foreach ($questions as $k => $v) {
    if (in_array($node->cc[$k], $v['answers']))
      $questions[$k]['selected'] = $node->cc[$k];
    else
      $questions[$k]['selected'] = current($v['answers']);
  }

  $cc = new creativecommons_license($node->cc_license, $questions, $node->cc['metadata']);

  if (!$node->cc)
    $cc->new = TRUE;
  $node->cc = $cc;

}

/**
  *  Debug code
  */
if (function_exists('echo_pre')) {
}
else {

function echo_pre($arr, $head = '') {
  echo "<pre>";
  if ($head !='') {
    echo "$head<br/>";
  }
  print_r($arr);
  echo "</pre>";
}

}
